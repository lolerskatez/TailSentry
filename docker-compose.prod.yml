# TailSentry - Docker Compose configuration
# This file provides an easy way to deploy TailSentry with proper networking and persistence

version: '3.8'

services:
  tailsentry:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: tailsentry
    hostname: tailsentry
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      # Mount tailscale socket for CLI access (if available)
      - /var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock:ro
      # Persistent data storage
      - tailsentry_data:/app/data
      - tailsentry_logs:/app/logs
      - tailsentry_config:/app/config
      # Optional: Mount custom configuration
      # - ./config:/app/config:ro
    environment:
      # Core application settings
      - TAILSENTRY_ENV=production
      - PYTHONUNBUFFERED=1
      - TZ=${TZ:-UTC}
      
      # Security settings
      - SESSION_SECRET=${SESSION_SECRET:-}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-}
      - SESSION_TIMEOUT_MINUTES=${SESSION_TIMEOUT_MINUTES:-30}
      - MAX_LOGIN_ATTEMPTS=${MAX_LOGIN_ATTEMPTS:-5}
      - LOCKOUT_DURATION=${LOCKOUT_DURATION:-300}
      
      # Tailscale settings
      - TAILSCALE_PAT=${TAILSCALE_PAT:-}
      - TAILSCALE_API_KEY=${TAILSCALE_API_KEY:-}
      - TAILNET=${TAILNET:-}
      
      # Application settings
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8080}
      
    networks:
      - tailnet
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    read_only: false  # Allow writes to mounted volumes
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
      - DAC_OVERRIDE
    labels:
      - "com.tailsentry.service=main"
      - "com.tailsentry.version=1.0.0"
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080", "--workers", "1"]

volumes:
  tailsentry_data:
    driver: local
    labels:
      - "com.tailsentry.volume=data"
  tailsentry_logs:
    driver: local
    labels:
      - "com.tailsentry.volume=logs"
  tailsentry_config:
    driver: local
    labels:
      - "com.tailsentry.volume=config"

networks:
  tailnet:
    driver: bridge
    labels:
      - "com.tailsentry.network=main"
