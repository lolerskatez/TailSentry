#!/usr/bin/env python3
"""
Manual setup script to create a working .env file for testing
"""

import os
import secrets
import bcrypt
from pathlib import Path

print("üîß Setting up TailSentry .env file...")

# Generate secure session secret
session_secret = secrets.token_hex(32)
print(f"Generated session secret: {session_secret[:16]}...")

# Generate password hash for "admin123"
default_password = "admin123"
password_hash = bcrypt.hashpw(default_password.encode(), bcrypt.gensalt()).decode()
print(f"Generated password hash: {password_hash[:30]}...")

# Create .env content
env_content = f"""# TailSentry Configuration
# Auto-generated by setup script

# === Authentication ===
ADMIN_USERNAME=admin
ADMIN_PASSWORD_HASH={password_hash}

# === Session Configuration ===
SESSION_SECRET={session_secret}
SESSION_TIMEOUT_MINUTES=30

# === Tailscale Configuration ===
TAILSCALE_PAT=
TAILSCALE_TAILNET=-
TAILSCALE_API_TIMEOUT=10

# === Application Settings ===
DEVELOPMENT=true
LOGGING_LEVEL=INFO
METRICS_ENABLED=true
BACKUP_ENABLED=true
BACKUP_RETENTION_DAYS=30

# === Server Configuration ===
HOST=0.0.0.0
PORT=8080
WORKERS=1

# === Security Settings ===
CSRF_ENABLED=true
RATE_LIMIT_ENABLED=true
MAX_LOGIN_ATTEMPTS=5
LOGIN_ATTEMPT_WINDOW=900

# === Database Settings ===
DATABASE_URL=sqlite:///data/tailsentry.db
DATABASE_POOL_SIZE=5
DATABASE_POOL_TIMEOUT=30

# === Cache Settings ===
CACHE_TYPE=memory
CACHE_TTL=300
REDIS_URL=redis://localhost:6379/0

# === Monitoring ===
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
HEALTH_CHECK_ENABLED=true
"""

# Write to .env file
with open('.env', 'w') as f:
    f.write(env_content)

print("‚úÖ .env file created successfully!")
print(f"üìÅ File size: {Path('.env').stat().st_size} bytes")
print()
print("üîë Default credentials:")
print("   Username: admin")
print("   Password: admin123")
print()
print("üß™ Testing password verification...")

# Test the password
try:
    result = bcrypt.checkpw(default_password.encode(), password_hash.encode())
    print(f"   Verification test: {'‚úÖ PASS' if result else '‚ùå FAIL'}")
except Exception as e:
    print(f"   Verification test: ‚ùå ERROR - {e}")

print()
print("üí° You can now start TailSentry and login with admin/admin123")
